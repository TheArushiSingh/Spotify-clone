{"version":3,"sources":["spotify.js","login/Login.js","data/DataLayer.js","player/sidebar/partials/SidebarOption.js","player/sidebar/Sidebar.js","player/body/partials/Header.js","data/SoundLayer.js","player/body/partials/SongRow.js","player/body/Body.js","player/footer/Footer.js","player/Player.js","App.js","serviceWorker.js","data/reducer.js","data/soundReducer.js","index.js"],"names":["redirectUrl","window","location","origin","loginUrl","join","Login","className","src","alt","href","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","SidebarOption","spotify","title","id","Icon","dispatch","onClick","e","type","getPlaylistTracks","then","response","tracks","changePlaylist","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","key","Header","user","placeholder","Avatar","images","url","display_name","SoundLayerContext","SoundLayer","useSoundLayerValue","SongRow","track","playing","repeat","soundDispatch","wasPlaying","audio","Audio","preview_url","loop","document","artists","artist","changeTrack","album","Body","current_playlist","volume","description","fontSize","Footer","shuffle","setRepeat","setShuffle","onended","randomTrackNumber","Math","floor","random","length","randomTrack","Grid","container","spacing","item","xs","Slider","aria-labelledby","valueLabelDisplay","onChange","event","min","max","Player","SpotifyWebApi","App","token","useEffect","hash","substring","split","reduce","initial","parts","decodeURIComponent","_token","setAccessToken","getMe","getUserPlaylists","Boolean","hostname","match","state","action","currentPlaylist","forEach","soundReducer","play","pause","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b4930112.chunk.js","sourcesContent":["//https://developer.spotify.com/documentation/web-playback-sdk/quick-start/\n\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\n\nconst redirectUrl = window.location.origin + '/'; //where are you running your app (local react by default is http://localhost:3000/\nconst clientId = 'd3384f96a6054701a7cf023eb714c440'; // clintId you can get at https://developer.spotify.com/dashboard\n\n/**\n * You can read more about Spotify scopes at https://developer.spotify.com/documentation/general/guides/scopes/\n */\nconst scopes = [\n    'user-read-currently-playing',\n    'user-read-recently-played',\n    'user-read-playback-state',\n    'user-top-read',\n    'user-modify-playback-state'\n];\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUrl}&scopes=${scopes.join('%20')}&response_type=token&show_dialog=true`;\n\nexport const getAccessTokenFromUrl = () => {\n    return window.location.hash\n        .substring(1)\n        .split('&')\n        .reduce((initial, item) => {\n            let parts = item.split('=');\n            initial[parts[0]] = decodeURIComponent(parts[1]);\n            return initial\n        }, {});\n};","import React from 'react'\nimport './Login.css';\nimport { loginUrl } from '../spotify'\n\nfunction Login() {\n    return (\n        <div className=\"login\">\n            <img\n                src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n                alt=\"\"/>\n            <a href={ loginUrl }>Login with Spotify</a>\n        </div>\n    )\n}\n\nexport default Login","import React, {createContext, useContext, useReducer} from 'react';\n\nexport const DataLayerContext = createContext();\n\nexport const DataLayer = ({initialState, reducer, children}) => (\n    <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </DataLayerContext.Provider>\n);\n\nexport const useDataLayerValue = () => useContext(DataLayerContext);","import React from 'react'\nimport './SidebarOption.css'\nimport {useDataLayerValue} from '../../../data/DataLayer';\n\nfunction SidebarOption({spotify, title, id, Icon}) {\n    const [{}, dispatch] = useDataLayerValue();\n\n    const changePlaylist = (id, e) => {\n        dispatch({\n            type: 'SET_CURRENT_PLAYLIST',\n            id: id\n        });\n\n        spotify.getPlaylistTracks(id).then((response) => {\n            dispatch({\n                type: 'SET_TRACKS',\n                tracks: response\n            })\n        });\n    }\n\n    return (\n        <div className='sidebarOption'>\n            {Icon && <Icon className='sidebarOption__icon'/>}\n            {Icon ? <h4>{title}</h4> : <p onClick={(e) => changePlaylist(id, e)}>{title}</p>}\n        </div>\n    )\n}\n\nexport default SidebarOption","import React from 'react'\nimport './Sidebar.css'\nimport SidebarOption from './partials/SidebarOption';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\nimport {useDataLayerValue} from \"../../data/DataLayer\";\n\nfunction Sidebar({spotify}) {\n    const [{playlists}] = useDataLayerValue();\n\n    return (\n        <div className='sidebar'>\n            <img className='sidebar_logo' src='https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg'\n                 alt=''/>\n            <SidebarOption title='Home' Icon={HomeIcon}/>\n            <SidebarOption title='Search' Icon={SearchIcon}/>\n            <SidebarOption title='Your Library' Icon={LibraryMusicIcon}/>\n\n            <br/>\n            <strong className='sidebar__title'>PLAYLISTS</strong>\n            <hr/>\n\n            {playlists?.items?.map((playlist) => {\n                return <SidebarOption spotify={spotify} title={playlist.name} id={playlist.id} key={playlist.id}/>\n            })}\n        </div>\n    )\n}\n\nexport default Sidebar","import React from 'react'\nimport './Header.css'\nimport SearchIcon from '@material-ui/icons/Search';\nimport {Avatar} from \"@material-ui/core\";\nimport {useDataLayerValue} from \"../../../data/DataLayer\";\n\nfunction Header({ spotify }) {\n    const [{user}] = useDataLayerValue();\n\n\n    return (\n        <div className=\"header\">\n            <div className=\"header__left\">\n                <SearchIcon />\n                <input\n                    placeholder='Search for Artists, Songs or Podcasts'\n                    type=\"text\"/>\n            </div>\n            <div className=\"header__right\">\n                <Avatar src={user?.images[0]?.url } alt={user?.display_name} />\n                <h4>{ user?.display_name }</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default Header","import React, {createContext, useContext, useReducer} from 'react';\n\nexport const SoundLayerContext = createContext();\n\nexport const SoundLayer = ({initialState, reducer, children}) => (\n    <SoundLayerContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </SoundLayerContext.Provider>\n);\n\nexport const useSoundLayerValue = () => useContext(SoundLayerContext);","import React from 'react'\nimport './SongRow.css'\nimport {useDataLayerValue} from '../../../data/DataLayer';\nimport {useSoundLayerValue} from '../../../data/SoundLayer';\n\nfunction SongRow({track}) {\n    const [{}, dispatch] = useDataLayerValue();\n    const [{playing, repeat}, soundDispatch] = useSoundLayerValue();\n\n    const changeTrack = (e, track) => {\n        dispatch({\n            type: 'SET_TRACK',\n            track: track\n        });\n\n        let wasPlaying = playing;\n        soundDispatch({\n            type: 'SET_PLAYING',\n            playing: false,\n        });\n\n        let audio = new Audio(track.preview_url);\n        audio.loop = repeat;\n        soundDispatch({\n            type: 'SET_AUDIO',\n            audio: audio\n        });\n\n        if(wasPlaying) {\n            soundDispatch({\n                type: 'SET_PLAYING',\n                playing: true,\n            });\n        }\n\n        document.title = `${track.name} · ${track.artists.map((artist) => artist.name).join(', ')}`\n    };\n    return (\n        <div className='songRow' onClick={(e) => changeTrack(e, track)}>\n            <img className='songRow__album' src={track.album.images[0].url} alt=''/>\n            <div className='songRow__info'>\n                <h1>{track.name}</h1>\n                <p>\n                    {track.artists.map((artist) => artist.name).join(', ')}\n                </p>\n                <p>\n                    {track.album.name}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default SongRow","import React from 'react'\nimport './Body.css'\nimport Header from \"./partials/Header\";\nimport {useDataLayerValue} from \"../../data/DataLayer\";\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport SongRow from \"./partials/SongRow\";\nimport {useSoundLayerValue} from \"../../data/SoundLayer\";\n\nfunction Body({spotify}) {\n    const [{current_playlist, tracks, track}] = useDataLayerValue();\n    const [{playing, volume}, soundDispatch] = useSoundLayerValue();\n\n    const startPlaying = () => {\n        soundDispatch({\n            type: \"SET_PLAYING\",\n            playing: true\n        });\n        soundDispatch({\n            type: \"SET_VOLUME\",\n            volume: volume / 100\n        });\n    };\n\n    const stopPlaying = () => {\n        soundDispatch({\n            type: \"SET_PLAYING\",\n            playing: false\n        });\n    };\n\n    return (\n        <div className=\"body\">\n            <Header spotify={spotify}/>\n            <div className=\"body__info\">\n                <img\n                    src={current_playlist ? current_playlist?.images[0].url : 'https://cdn.shortpixel.ai/client/to_webp,q_lossy,ret_img,w_250/https://www.hypebot.com/wp-content/uploads/2020/07/discover-weekly-250x250.png'}\n                    alt=\"\"/>\n                <div className=\"body__infoText\">\n                    <strong>PLAYLIST</strong>\n                    <h2>{current_playlist?.name}</h2>\n                    <p>{current_playlist?.description}</p>\n                </div>\n            </div>\n\n            <div className=\"body__songs\">\n                <div className=\"body__icons\">\n                    {playing ? <PauseCircleFilledIcon onClick={track ? stopPlaying : null}\n                                                      className='body__shuffle'/> :\n                        <PlayCircleFilledIcon onClick={track ? startPlaying : null} fontSize='large'\n                                              className='body__shuffle'/>}\n                    <FavoriteIcon fontSize='large'/>\n                    <MoreHorizIcon/>\n                </div>\n                {tracks?.items.map(track => {\n                    return <SongRow track={track.track} key={track.track.id}/>\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Body","import React from 'react'\nimport './Footer.css'\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport {Grid, Slider} from '@material-ui/core';\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport {useDataLayerValue} from \"../../data/DataLayer\";\nimport {useSoundLayerValue} from \"../../data/SoundLayer\";\n\nfunction Footer() {\n    const [{track, tracks}, dispatch] = useDataLayerValue();\n    const [{audio, playing, volume, repeat, shuffle}, soundDispatch] = useSoundLayerValue();\n\n\n    const startPlaying = () => {\n        soundDispatch({\n            type: \"SET_PLAYING\",\n            playing: true\n        });\n        soundDispatch({\n            type: \"SET_VOLUME\",\n            volume: volume / 100\n        });\n    };\n\n    const stopPlaying = () => {\n        soundDispatch({\n            type: \"SET_PLAYING\",\n            playing: false\n        });\n    };\n\n    const setRepeat = () => {\n        if(!repeat && shuffle) {\n            setShuffle();\n        }\n        soundDispatch({\n            type: \"SET_REPEAT\",\n            repeat: !repeat\n        });\n    };\n\n    const setShuffle = () => {\n        if(!shuffle && repeat) {\n            setRepeat();\n        }\n        soundDispatch({\n            type: \"SET_SHUFFLE\",\n            shuffle: !shuffle\n        });\n    };\n\n    const handleChange = (event, value) => {\n        soundDispatch({\n            type: \"SET_VOLUME\",\n            volume: value / 100\n        });\n    };\n\n    if(audio) {\n        audio.onended = () => {\n            if(shuffle) {\n                while(true) {\n                    let randomTrackNumber = Math.floor((Math.random() * tracks.items.length));\n                    let randomTrack = tracks.items[randomTrackNumber].track;\n                    if(track !== randomTrack) {\n                        dispatch({\n                            type: 'SET_TRACK',\n                            track: randomTrack\n                        });\n\n                        let wasPlaying = playing;\n                        soundDispatch({\n                            type: 'SET_PLAYING',\n                            playing: false,\n                        });\n\n                        let audio = new Audio(randomTrack.preview_url);\n                        audio.loop = repeat;\n                        soundDispatch({\n                            type: 'SET_AUDIO',\n                            audio: audio\n                        });\n\n                        if(wasPlaying) {\n                            soundDispatch({\n                                type: 'SET_PLAYING',\n                                playing: true,\n                            });\n                        }\n\n                        document.title = `${randomTrack.name} · ${randomTrack.artists.map((artist) => artist.name).join(', ')}`\n                        break\n                    }\n                }\n            }\n            if(!shuffle && !repeat) {\n                soundDispatch({\n                    type: 'SET_PLAYING',\n                    playing: false,\n                });\n            }\n        }\n    }\n\n    return (\n        <div className=\"footer\">\n            <div className='footer__left'>\n                <img className='footer__albumLogo' src={track ? track.album.images[0].url : ''} alt=\"\"/>\n                <div className='footer__songInfo'>\n                    <h4>{track ? track.name : 'No song selected'}</h4>\n                    <p>{track ? track.artists.map((artist) => artist.name).join(\", \") : null}</p>\n                </div>\n            </div>\n            <div className='footer__center'>\n                <ShuffleIcon onClick={track? setShuffle : null} className={shuffle ? 'footer__green' : 'footer__icon'}/>\n                <SkipPreviousIcon className='footer__icon'/>\n                {playing ? <PauseCircleOutlineIcon onClick={track ? stopPlaying : null} fontSize='large'\n                                                   className='footer__icon'/> :\n                    <PlayCircleOutlineIcon onClick={track ? startPlaying : null} fontSize='large'\n                                           className='footer__icon'/>}\n                <SkipNextIcon className='footer__icon'/>\n                <RepeatIcon onClick={track? setRepeat : null} className={repeat ? 'footer__green' : 'footer__icon'}/>\n            </div>\n            <div className='footer__right'>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <PlaylistPlayIcon/>\n                    </Grid>\n                    <Grid item>\n                        <VolumeDownIcon/>\n                    </Grid>\n                    <Grid item xs>\n                        <Slider\n                            aria-labelledby=\"discrete-slider\"\n                            valueLabelDisplay=\"off\"\n                            onChange={handleChange}\n                            min={0}\n                            max={100}\n                        />\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport './Player.css'\nimport Sidebar from \"./sidebar/Sidebar\";\nimport Body from \"./body/Body\";\nimport Footer from \"./footer/Footer\";\n\nfunction Player({ spotify }) {\n    return (\n        <div className=\"player\">\n            <div className=\"player_body\">\n                <Sidebar spotify={ spotify } />\n                <Body spotify={ spotify } />\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default Player","import React, {useEffect} from 'react';\nimport Login from './login/Login';\nimport './App.css';\nimport {getAccessTokenFromUrl} from \"./spotify\";\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from \"./player/Player\";\nimport {useDataLayerValue} from './data/DataLayer';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n    const [{token}, dispatch] = useDataLayerValue();\n\n    useEffect(() => {\n        const hash = getAccessTokenFromUrl();\n        window.location.hash = '';\n        const _token = hash['access_token'];\n\n        if (_token) {\n            dispatch({\n                type: \"SET_TOKEN\",\n                token: _token\n            });\n\n            spotify.setAccessToken(_token);\n            spotify.getMe().then(user => {\n                dispatch({\n                    type: 'SET_USER',\n                    user: user\n                })\n            });\n\n            spotify.getUserPlaylists().then((playlists) => {\n                dispatch({\n                    type: 'SET_PLAYLISTS',\n                    playlists: playlists,\n                })\n            });\n        }\n    }, []);\n    return <div className=\"app\"> {token ? <Player spotify={spotify} /> : <Login/>}</div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\n    user: null,\n    playlists: [],\n    playing: false,\n    item: null,\n    current_playlist: null,\n    tracks: null,\n    track: null,\n    token: null,\n};\n\nconst reducer = (state, action) => {\n    // Action -> type, [payload]\n    switch (action.type) {\n        case 'SET_USER':\n            return {\n                ...state,\n                user: action.user\n            };\n        case \"SET_TOKEN\": {\n            return {\n                ...state,\n                token: action.token\n            }\n        }\n        case \"SET_PLAYLISTS\": {\n            return {\n                ...state,\n                playlists: action.playlists\n            }\n        }\n        case 'SET_CURRENT_PLAYLIST': {\n            let currentPlaylist = null;\n            state.playlists.items.forEach(playlist => {\n                if(playlist.id === action.id) {\n                    currentPlaylist = playlist;\n                }\n            });\n            return {\n                ...state,\n                current_playlist: currentPlaylist\n            }\n        }\n        case 'SET_TRACKS': {\n            return {\n                ...state,\n                tracks: action.tracks\n            };\n        }\n        case 'SET_TRACK': {\n            return {\n                ...state,\n                track: action.track\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","export const soundInitialState = {\n    audio: null,\n    playing: false,\n    volume: 0.3,\n    repeat: false,\n    shuffle: false,\n};\n\nconst soundReducer = (state, action) => {\n    switch (action.type) {\n        case 'SET_AUDIO':\n            return {\n                ...state,\n                audio: action.audio\n            };\n        case 'SET_PLAYING':\n            if(!action.playing) {\n                if(state.audio) {\n                    state.audio.pause();\n                }\n            } else {\n                if(state.audio) {\n                    state.audio.play();\n                }\n            }\n            return {\n                ...state,\n                playing: action.playing\n            };\n        case 'SET_VOLUME':\n            if(state.audio) {\n                state.audio.volume = action.volume;\n            }\n            return {\n                ...state,\n                volume: action.volume,\n            };\n        case 'SET_REPEAT':\n            if(state.audio) {\n                state.audio.loop = action.repeat;\n            }\n            return {\n                ...state,\n                repeat: action.repeat,\n            };\n        case 'SET_SHUFFLE':\n            if(state.audio) {\n                return {\n                    ...state,\n                    shuffle: action.shuffle\n                };\n            }\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport default soundReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {DataLayer} from \"./data/DataLayer\";\nimport reducer, {initialState} from \"./data/reducer\";\nimport {SoundLayer} from \"./data/SoundLayer\";\nimport soundReducer, {soundInitialState} from \"./data/soundReducer\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <DataLayer initialState={initialState} reducer={reducer}>\n            <SoundLayer initialState={soundInitialState} reducer={soundReducer}>\n                <App/>\n            </SoundLayer>\n        </DataLayer>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}